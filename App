import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";

const defaultAgenda = [
  { title: "Segue", time: 5 },
  { title: "Data", time: 5 },
  { title: "Rocks", time: 5 },
  { title: "Headlines", time: 5 },
  { title: "To-Dos", time: 5 },
  { title: "Issues", time: 60 },
  { title: "Conclude", time: 5 },
];

const CountdownAgenda = () => {
  const [agenda, setAgenda] = useState(defaultAgenda);
  const [currentIndex, setCurrentIndex] = useState(null);
  const [timeLeft, setTimeLeft] = useState(0);
  const [running, setRunning] = useState(false);
  
  useEffect(() => {
    let timer;
    if (running && timeLeft > 0) {
      timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
    } else if (running && timeLeft === 0 && currentIndex !== null) {
      playSound(currentIndex === agenda.length - 1);
      if (currentIndex < agenda.length - 1) {
        setCurrentIndex(currentIndex + 1);
        setTimeLeft(agenda[currentIndex + 1].time * 60);
      } else {
        setRunning(false);
      }
    }
    return () => clearTimeout(timer);
  }, [timeLeft, running, currentIndex, agenda]);

  const playSound = (isLast) => {
    const audio = new Audio(isLast ? "/meeting-end.mp3" : "/beep.mp3");
    audio.play();
  };

  const startAgenda = () => {
    setCurrentIndex(0);
    setTimeLeft(agenda[0].time * 60);
    setRunning(true);
  };

  const togglePauseResume = () => {
    setRunning(!running);
  };

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${minutes}:${secs < 10 ? "0" : ""}${secs}`;
  };

  return (
    <div className="p-6 max-w-md mx-auto bg-white rounded-xl shadow-md space-y-4">
      <h1 className="text-xl font-bold">Countdown Agenda</h1>
      <div className="border p-2 rounded bg-gray-100">
        <p className="text-center font-bold">{currentIndex !== null ? `Now: ${agenda[currentIndex].title}` : "Press Start"}</p>
        <p className="text-center font-bold">Time Left: {formatTime(timeLeft)}</p>
        <div className="relative w-full h-2 bg-gray-300 mt-2">
          <div
            className="absolute top-0 left-0 h-2 bg-orange-500"
            style={{ width: `${((agenda[currentIndex]?.time * 60 - timeLeft) / (agenda[currentIndex]?.time * 60)) * 100}%` }}
          ></div>
        </div>
      </div>
      <div>
        {agenda.map((item, index) => (
          <div key={index} className={`p-2 flex justify-between ${index === currentIndex ? "bg-gray-300 font-bold" : ""}`}>
            <span>{index + 1}. {item.title}</span>
            <span>{index === currentIndex ? formatTime(timeLeft) : `${item.time}:00`}</span>
          </div>
        ))}
      </div>
      <Button onClick={startAgenda} disabled={running || currentIndex !== null} className="w-full">Start Meeting</Button>
      {currentIndex !== null && (
        <Button onClick={togglePauseResume} className="w-full mt-2">{running ? "Pause" : "Resume"}</Button>
      )}
    </div>
  );
};

export default CountdownAgenda;
